name: Create Jira issue

on:
  issues:
    types:
      - opened

jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 코드에 대한 쓰기 권한
      issues: write    # 이슈에 대한 쓰기 권한
      pull-requests: write  # PR 관련 권한

    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout main code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Issue Parser
        uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue-form.yml

      - name: Log Issue Parser  # 디버깅용 로그 추가
        run: |
          echo "Parsed parentKey: ${{ steps.issue-parser.outputs.issueparser_parentKey }}"
          echo "Parsed issuetype: ${{ steps.issue-parser.outputs.issueparser_issuetype }}"
          echo "Create branch? ${{ steps.issue-parser.outputs.issueparser_createBranch }}"
          echo "Parsed JSON: ${{ steps.issue-parser.outputs.jsonString }}"
          echo "Branch Name from form: ${{ steps.issue-parser.outputs.branchName }}"  # 디버깅용 출력 추가

      - name: Convert markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}
            ${{ github.event.issue.body }}
          mode: md2jira

      - name: Create Issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: CUL
          issuetype: '${{ steps.issue-parser.outputs.issueparser_issuetype }}'
          summary: '${{ github.event.issue.title }}'
          description: '${{ steps.md2jira.outputs.output-text }}'
          fields: |
            {
              "parent": {
                "key": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
              }
            }

      - name: Log created issue
        run: echo "Jira Issue ${{ steps.issue-parser.outputs.issueparser_parentKey }}/${{ steps.create.outputs.issue }} was created"

      - name: Checkout develop code
        if: ${{ steps.issue-parser.outputs.issueparser_createBranch == 'Yes' }}
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Create branch with Ticket number
        if: ${{ steps.issue-parser.outputs.issueparser_createBranch == 'Yes' }}
        run: |
          ISSUE_NUMBER="${{ steps.create.outputs.issue }}"  # 예: CUL-123
          BRANCH_NAME="${{ steps.issue-parser.outputs.issueparser_branchName }}-${ISSUE_NUMBER}"  # 사용자가 입력한 브랜치 이름 + 이슈 키
          echo "Generated branch name: ${BRANCH_NAME}"  # 디버깅 출력
          git checkout -b "${BRANCH_NAME}"
          git push origin "${BRANCH_NAME}"

      - name: Update issue title
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          title: '[${{ steps.create.outputs.issue }}] ${{ github.event.issue.title }}'

      - name: Add comment with Jira issue link
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: 'Jira Issue Created: [${{ steps.create.outputs.issue }}](${{ secrets.JIRA_BASE_URL }}/browse/${{ steps.create.outputs.issue }})'

